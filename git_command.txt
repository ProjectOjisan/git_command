Bashのコマンド
pwd		現在のディレクトリの位置を表示
cd <folder>		フォルダに移動
cd		HOMEのフォルダに移動
cd ..		一つ上のフォルダに移動
ls		ファイルの一覧
mkdir		ディレクトリの作成
rm -r <folder>		フォルダツリーの削除
rm -rf <folder>		フォルダツリーの強制削除
cat <file>		ファイルの内容の表示
vi <file>		ファイルをviエディタで編集
echo <word>		画面に表示
>		リダイレクト

ページャの操作
スペース		次ページ
b		前ページ
q		終了


Gitのコマンド

よく使うもの
git log		ログ(履歴)を表示
git log --patch		パッチ情報を示すリストを表示
git log --oneline		ログを1行表示
git log --oneline <file>		ファイルに関連した1行ログの表示
git log --stat		ログと変更されたファイルを表示。gitkの「パッチ」ビューと同様の出力。
git log --patch-with-stat		--patchと--statの両方の出力。
git status		gitの状態を表示
git gui		GUIで操作に移る。GUIを閉じると戻る。
git add <file>		ファイルをステージングする
git add .		カレントディレクトリ内の新しいファイルをすべて追加
git commit -m "message"		メッセージの内容でコミットする。メッセージを省略するとエディタが開く。
git diff		カレントディレクトリ内で追跡されているファイルとステージングエリアのファイルもしくはリポジトリ内のファイルと比較する
git diff --staged		ステージングエリアのファイルとリポジトリ内のファイルの比較をする
git rm <file>		ファイルをステージングエリアから削除
git mv <file1> <file2>		ファイル名をファイル1からファイル2に変更する
git reset <file>		ステージングエリアに加えたファイルの変更が取り消される。作業ディレクトリ内のファイルは変更されない。
git restore --staged <file>		ステージングエリアからファイルの変更をどかす
git checkout <SHA1_ID>		作業ディレクトリ内のファイルをSHA1_IDのコミットのファイルに変更してHEADを移動する。
git checkout <branch>		作業ディレクトリ内のファイルをブランチのファイルに変更してHEADを移動する。例えばmasterでmasterブランチ(の最新の状態)に戻る。
git tag <tag> -m "メッセージ" <SHA1_ID>		<SHA1_ID>にタグをつける
git tag		タグの一覧を表示
git tag -d <tag>		タグを削除する


Gitの操作(よく使うもの以外)
git clone <URL>		リポジトリのクローンを作る
git ls-files		リポジトリ内のファイルのリスト表示
git commit -a -m "メッセージ"		git addを実行してからコミットする
git add --dry-run .		Git addで何が実行されるかを表示。.はaddの引数にできる。
git add -p		ステージングエリアに追加すべき変更部分を手作業で選択する
git checkout -- <file>		最後にコミットしたファイルに戻す。ステージングエリアも消える。
git log --shortstat --oneline		履歴をコミットごとに１行で表示、各コミットで変更されたファイルを１行で表示
git log --parents		各コミットの親コミットのSHA1 IDを表示
git log --parents --abbrev-commit		各コミットの親コミットを短縮されたSHA1 IDで表示(40文字のうちの最初の7文字)
git rev-parse <branch>		ブランチ名をSHA1 IDに変換する。例えばHEADとかmaster。
git show <tag or branch>		タグやブランチの情報を表示
git commit --amend -m "メッセージ"		直前のコミットのメッセージを修正


その他
git --version		gitのバージョンを表示
git config --global user.name "Your Name"		名前の登録
git config --global user.email "Your E-mail@example.com"		メールアドレスの登録
git config --list		gitのすべての設定を表示
git config user.name		ユーザー名の表示
git config user.email		ユーザーのメールアドレスの表示
git config --global --unset <キー>		キーを削除
git citool		変更をコミットするgitのGUIに移る
gitk		gitkを起動
git blame <file>		ファイルのプレーム出力を表示
git help <command>		コマンドのヘルプ
git <command> --help		コマンドのヘルプ
git help -g		gitのガイドのリスト
git help --glossary		gitの用語
git help help		gitのヘルプシステムのヘルプ
git help -a		利用できるコマンドのリスト(結構長い)
git -paginate help -a		すべてのgitコマンドをページで表示


他の場所からの情報
git config --global core.quotepath false		日本語のファイル名の文字化けを直す
git config --global gui.encoding utf-8		gitkのファイル内のutf-8の文字化けを直す
